/*DATA INSERTION PROCEDURES*/

/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_PERSON 
	@CNIC NUMERIC, @FIRST_NAME VARCHAR(30), @LAST_NAME VARCHAR(30), @ADDRESS VARCHAR(100), @GENDER VARCHAR(1), @DOB DATE, @NATIONALITY VARCHAR(30), @EMAIL VARCHAR(30)
AS
BEGIN

	DECLARE @AGE NUMERIC(2)
	SELECT @AGE = CLINIC.CALCULATE_AGE(@DOB)

    IF EXISTS (SELECT TOP 1 1 FROM OC_PERSON WHERE CNIC = @CNIC)
	BEGIN

        UPDATE CLINIC.OC_PERSON SET 
			FIRST_NAME = @FIRST_NAME, 
			LAST_NAME = @LAST_NAME, 
			ADDRESS = @ADDRESS, 
			AGE = @AGE, 
			GENDER = @GENDER, 
			DOB = @DOB,
			NATIONALITY = @NATIONALITY, 
			EMAIL = @EMAIL 
		WHERE CNIC = @CNIC
	
	END
	ELSE
	BEGIN

		
		INSERT INTO CLINIC.OC_PERSON 
			(CNIC, 
			FIRST_NAME, 
			LAST_NAME, 
			ADDRESS, 
			AGE, 
			GENDER, 
			DOB, 
			NATIONALITY, 
			EMAIL) 
		VALUES 
			(@CNIC, 
			@FIRST_NAME, 
			@LAST_NAME, 
			@ADDRESS, 
			@AGE, 
			@GENDER, 
			@DOB, 
			@NATIONALITY, 
			@EMAIL)
	
	END

END*/


/*CREATE PROC CLINIC.INSERT_ROW_OC_PERSON_CONTACT 
	@CNIC NUMERIC, @CONTACT NUMERIC
AS
BEGIN
	
	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSON_CONTACT WHERE CONTACT = @CONTACT AND CNIC = @CNIC)
	BEGIN

		PRINT 'The provided number is already saved against the provided cnic.'
	
	END
	ELSE 
	BEGIN

		INSERT INTO CLINIC.OC_PERSON_CONTACT 
			(CNIC, 
			CONTACT) 
		VALUES 
			(@CNIC, 
			@CONTACT)

	END

END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_PATIENT 
	@CNIC NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PATIENT WHERE CNIC = @CNIC)
	BEGIN

		PRINT 'The Patient is already registered.'
	
	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_PATIENT 
		(CNIC) 
		VALUES 
		(@CNIC)

	END
	
END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_DOCTOR
	@CNIC NUMERIC, @QUALIFICATION TEXT, @SPECIALIZATION TEXT, @FEE NUMERIC, @ENROLLMENT_DATE DATE
AS
BEGIN
		
	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_DOCTOR WHERE CNIC = @CNIC)
	BEGIN

		UPDATE CLINIC.OC_DOCTOR SET 
			QUALIFICATION = @QUALIFICATION, 
			SPECIALIZATION = @SPECIALIZATION, 
			FEE = @FEE,
			ENROLLMENT_DATE = @ENROLLMENT_DATE
		WHERE 
			CNIC = @CNIC
	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_DOCTOR 
			(CNIC, 
			QUALIFICATION, 
			SPECIALIZATION, 
			FEE,
			ENROLLMENT_DATE) 
		VALUES 
			(@CNIC, 
			@QUALIFICATION, 
			@SPECIALIZATION, 
			@FEE,
			@ENROLLMENT_DATE)

	END

END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_MEDICINE 
	@MED_ID NUMERIC = NULL, @MED_NAME VARCHAR(30), @MED_POTENCY VARCHAR(10), @DESC TEXT, @MGF_DATE DATE, @EXP_DATE DATE, @QUANTITY NUMERIC, @PRICE NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_MEDICINE WHERE MED_ID = @MED_ID)
	BEGIN

		UPDATE CLINIC.OC_MEDICINE SET
			MED_NAME = @MED_NAME,
			MED_POTENCY = @MED_POTENCY,
			"DESC" = @DESC,
			MGF_DATE = @MGF_DATE,
			EXP_DATE = @EXP_DATE,
			QUANTITY = @QUANTITY,
			PRICE = @PRICE
		WHERE MED_ID = @MED_ID

	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_MEDICINE
			(MED_NAME,
			MED_POTENCY,
			"DESC",
			MGF_DATE,
			EXP_DATE,
			QUANTITY,
			PRICE)
		VALUES
			(@MED_NAME,
			@MED_POTENCY,
			@DESC,
			@MGF_DATE,
			@EXP_DATE,
			@QUANTITY,
			@PRICE)

	END

END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_VISITS 
	@VISIT_NO NUMERIC = NULL, @PAT_ID NUMERIC, @DOC_ID NUMERIC, @PROBLEMS TEXT, @DIAGNOSIS TEXT, @VISIT_DATE DATE = NULL, @VISIT_TIME TIME = NULL, @FEE NUMERIC = NULL
AS
BEGIN

	IF @VISIT_DATE IS NULL
	BEGIN

		SELECT @VISIT_DATE = CAST(GETDATE() AS DATE)

	END

	IF @VISIT_TIME IS NULL
	BEGIN

		SELECT @VISIT_TIME = CAST(GETDATE() AS TIME)

	END

	IF @FEE IS NULL
	BEGIN

		SELECT @FEE = FEE 
		FROM CLINIC.OC_DOCTOR 
		WHERE DOC_ID = @DOC_ID

	END

	IF @VISIT_NO IS NOT NULL AND EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_VISITS WHERE VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND DOC_ID = @DOC_ID)
	BEGIN

		UPDATE CLINIC.OC_VISITS
		SET
			PROBLEMS = @PROBLEMS,
			DIAGNOSIS = @DIAGNOSIS,
			VISIT_DATE = @VISIT_DATE,
			VISIT_TIME = @VISIT_TIME,
			FEE = @FEE
		WHERE
			VISIT_NO = @VISIT_NO AND
			PAT_ID = @PAT_ID AND
			DOC_ID = @DOC_ID

	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_VISITS
			(PAT_ID, 
			DOC_ID, 
			PROBLEMS, 
			DIAGNOSIS, 
			VISIT_DATE, 
			VISIT_TIME, 
			FEE) 
		VALUES 
			(@PAT_ID, 
			@DOC_ID, 
			@PROBLEMS, 
			@DIAGNOSIS, 
			@VISIT_DATE, 
			@VISIT_TIME, 
			@FEE)
	
	END

END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_PERSCRIPTION
	@PER_ID NUMERIC = NULL, @VISIT_NO NUMERIC, @PAT_ID NUMERIC, @MED_ID NUMERIC, @DOC_ID NUMERIC, @QUANTITY NUMERIC
AS
BEGIN

	IF @PER_ID IS NOT NULL AND EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSCRIPTION WHERE PER_ID = @PER_ID AND VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND MED_ID = @MED_ID AND DOC_ID = @DOC_ID)
	BEGIN			

		UPDATE CLINIC.OC_PERSCRIPTION
			SET QUANTITY = @QUANTITY
		WHERE 
			PER_ID = @PER_ID AND 
			VISIT_NO = @VISIT_NO AND 
			PAT_ID = @PAT_ID AND 
			MED_ID = @MED_ID AND 
			DOC_ID = @DOC_ID

	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_PERSCRIPTION 
			(VISIT_NO, 
			PAT_ID, 
			MED_ID, 
			DOC_ID, 
			QUANTITY) 
		VALUES 
			(@VISIT_NO, 
			@PAT_ID, 
			@MED_ID, 
			@DOC_ID, 
			@QUANTITY)

	END

END*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_RECEIPT_DETAILS 
	@RECEIPT_NO NUMERIC = NULL, @PER_ID NUMERIC, @VISIT_NO NUMERIC, @PAT_ID NUMERIC, @MED_ID NUMERIC, @QUANTITY NUMERIC
AS

	DECLARE @TOTAL_COST NUMERIC
	SET @TOTAL_COST = 0
	SELECT @TOTAL_COST = PRICE 
	FROM CLINIC.OC_MEDICINE 
	WHERE MED_ID = @MED_ID
	SET @TOTAL_COST = @TOTAL_COST * @QUANTITY

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_RECEIPT_DETAILS WHERE RECEIPT_NO = @RECEIPT_NO AND PER_ID = @PER_ID AND VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND MED_ID = @MED_ID)
	BEGIN

		UPDATE CLINIC.OC_RECEIPT_DETAILS 
		SET
			QUANTITY = @QUANTITY,
			TOTAL_COST = @TOTAL_COST
		WHERE 
			RECEIPT_NO = @RECEIPT_NO AND 
			PER_ID = @PER_ID AND 
			VISIT_NO = @VISIT_NO AND 
			PAT_ID = @PAT_ID AND 
			MED_ID = @MED_ID

	END
	ELSE
	BEGIN
	
		INSERT INTO CLINIC.OC_RECEIPT_DETAILS 
			(RECEIPT_NO, 
			PER_ID, 
			VISIT_NO, 
			PAT_ID, 
			MED_ID, 
			QUANTITY, 
			TOTAL_COST) 
		VALUES 
			(@RECEIPT_NO, 
			@PER_ID, 
			@VISIT_NO, 
			@PAT_ID, 
			@MED_ID, 
			@QUANTITY,
			@TOTAL_COST)

	END

	SELECT @RECEIPT_NO = RECEIPT_NO FROM OC_RECEIPT_DETAILS
	WHERE
		PER_ID = @PER_ID AND
		VISIT_NO = @VISIT_NO AND
		PAT_ID = @PAT_ID AND 
		MED_ID = @MED_ID

	DECLARE @TEMP NUMERIC
	SET @TEMP = @TOTAL_COST
	SET @TOTAL_COST = 0
	SELECT @TOTAL_COST = TOTAL_COST 
	FROM CLINIC.OC_RECEIPT 
	WHERE RECEIPT_NO = @RECEIPT_NO

	IF @TOTAL_COST = 0
	BEGIN

		SELECT @TOTAL_COST = SUM(TOTAL_COST) 
		FROM CLINIC.OC_RECEIPT_DETAILS 
		WHERE RECEIPT_NO = @RECEIPT_NO
		
		DECLARE @DOC_ID NUMERIC
		SET @DOC_ID = 0
		SELECT @DOC_ID = DOC_ID 
		FROM CLINIC.OC_PERSCRIPTION 
		WHERE 
			PER_ID = @PER_ID AND 
			VISIT_NO = @VISIT_NO AND 
			PAT_ID = @PAT_ID AND 
			MED_ID = @MED_ID
		
		DECLARE @FEE NUMERIC
		SET @FEE = 0
		SELECT @FEE = FEE 
		FROM CLINIC.OC_DOCTOR 
		WHERE DOC_ID = @DOC_ID

		SET @TOTAL_COST = @TOTAL_COST + @FEE

		UPDATE CLINIC.OC_RECEIPT 
		SET 
			TOTAL_COST = @TOTAL_COST 
		WHERE RECEIPT_NO = @RECEIPT_NO

	END
	ELSE 
	BEGIN

		SET @TOTAL_COST = @TOTAL_COST + @TEMP
		UPDATE CLINIC.OC_RECEIPT SET TOTAL_COST = @TOTAL_COST WHERE RECEIPT_NO = @RECEIPT_NO

	END

RETURN*/


/*CREATE PROCEDURE CLINIC.INSERT_ROW_OC_RECEIPT 
	@RECEIPT_NO NUMERIC = NULL, @RECEIPT_DATE DATE = NULL, @RECEIPT_TIME TIME = NULL, @TOTAL_COST NUMERIC  = 0
AS
BEGIN

	IF @RECEIPT_DATE IS NULL
	BEGIN
		
		SET @RECEIPT_DATE = CAST(GETDATE() AS DATE)

	END

	IF @RECEIPT_TIME IS NULL
	BEGIN

		SET @RECEIPT_TIME = CAST(GETDATE() AS TIME)

	END

	IF @RECEIPT_NO IS NOT NULL AND EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_RECEIPT WHERE RECEIPT_NO = @RECEIPT_NO)
	BEGIN
	
		UPDATE CLINIC.OC_RECEIPT 
		SET
			RECEIPT_DATE = @RECEIPT_DATE,
			RECEIPT_TIME = @RECEIPT_TIME,
			TOTAL_COST = @TOTAL_COST
		WHERE
			RECEIPT_NO = @RECEIPT_NO

	END
	ELSE
	BEGIN

		INSERT INTO CLINIC.OC_RECEIPT 
			(RECEIPT_DATE, 
			RECEIPT_TIME,
			TOTAL_COST) 
		VALUES 
			(@RECEIPT_DATE, 
			@RECEIPT_TIME,
			@TOTAL_COST)

	END

END*/


/*DATA DELETION PROCEDURES*/

/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_PERSON 
	@CNIC NUMERIC
AS
 BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSON WHERE CNIC = @CNIC) OR EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSON_CONTACT WHERE CNIC = @CNIC)
	BEGIN

		EXEC CLINIC.DELETE_ROW_OC_PERSON_CONTACT @CNIC
		DELETE FROM CLINIC.OC_PERSON WHERE CNIC = @CNIC

	END
	ELSE
	BEGIN

		PRINT 'The record doesnt exist in table OC_PERSON'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_PERSON_CONTACT 
	@CNIC NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSON_CONTACT WHERE CNIC = @CNIC)
	BEGIN

		DELETE FROM CLINIC.OC_PERSON_CONTACT WHERE CNIC = @CNIC

	END
	ELSE
	BEGIN

		PRINT 'The record against the provided cnic doesnt exist in table OC_PERSON_CONTACT.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_PATIENT 
	@PAT_ID NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PATIENT WHERE PAT_ID = @PAT_ID)
	BEGIN

		DELETE FROM CLINIC.OC_PATIENT WHERE PAT_ID = @PAT_ID

	END
	ELSE
	BEGIN

		PRINT 'The record against the provided id doesnt exist in table OC_PATIENT.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_VISITS 
	@VISIT_NO NUMERIC, @PAT_ID NUMERIC, @DOC_ID NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_VISITS WHERE VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND DOC_ID = @DOC_ID)
	BEGIN

		DELETE FROM CLINIC.OC_VISITS WHERE PAT_ID = @PAT_ID AND VISIT_NO = @VISIT_NO AND DOC_ID = @DOC_ID

	END
	ELSE
	BEGIN

		PRINT 'The record against the provided arguments doesnt exist in table OC_VISITS.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_DOCTOR 
	@DOC_ID NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_DOCTOR WHERE DOC_ID = @DOC_ID)
	BEGIN

		DELETE FROM CLINIC.OC_DOCTOR WHERE DOC_ID = @DOC_ID

	END
	ELSE
	BEGIN

		PRINT 'The record againts the provided doctor id doesnt exist in table OC_DOCTOR.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_MEDICINE 
	@MED_ID NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_MEDICINE WHERE MED_ID = @MED_ID)
	BEGIN

		DELETE FROM CLINIC.OC_MEDICINE WHERE MED_ID = @MED_ID

	END
	ELSE
	BEGIN

		PRINT 'The record againts the provided medicine id doesnt exist in table OC_MEDICINE.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_PERSCRIPTION 
	@PER_ID NUMERIC, @VISIT_NO NUMERIC, @PAT_ID NUMERIC, @MED_ID NUMERIC, @DOC_ID NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_PERSCRIPTION WHERE PER_ID = @PER_ID AND VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND MED_ID = @MED_ID AND DOC_ID = @DOC_ID)
	BEGIN

		DELETE FROM CLINIC.OC_PERSCRIPTION WHERE PER_ID = @PER_ID AND VISIT_NO = @VISIT_NO AND PAT_ID = @PAT_ID AND MED_ID = @MED_ID AND DOC_ID = @DOC_ID

	END
	ELSE
	BEGIN

		PRINT 'The record againts the provided keys doesnt exist in table OC_PERSCRIPTION.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_RECEIPT_DETAILS 
	@RECEIPT_NO NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_RECEIPT_DETAILS WHERE RECEIPT_NO = @RECEIPT_NO)
	BEGIN

		DECLARE @TTL NUMERIC, @TTM NUMERIC
		SET @TTL = 0
		SET @TTM = 0
		
		SELECT @TTL = SUM(TOTAL_COST) 
		FROM CLINIC.OC_RECEIPT_DETAILS 
		WHERE RECEIPT_NO = @RECEIPT_NO

		SELECT @TTM = TOTAL_COST
		FROM CLINIC.OC_RECEIPT
		WHERE RECEIPT_NO = @RECEIPT_NO

		SET @TTL = @TTM - @TTL

		UPDATE CLINIC.OC_RECEIPT
		SET TOTAL_COST = @TTL
		WHERE RECEIPT_NO = @RECEIPT_NO

		DELETE FROM CLINIC.OC_RECEIPT_DETAILS 
		WHERE RECEIPT_NO = @RECEIPT_NO


	END
	ELSE
	BEGIN

		PRINT 'The record against the provided id doesnt exist in table OC_RECEIPT_DETAILS.'

	END

END*/


/*CREATE PROCEDURE CLINIC.DELETE_ROW_OC_RECEIPT 
	@RECEIPT_NO NUMERIC
AS
BEGIN

	IF EXISTS (SELECT TOP 1 1 FROM CLINIC.OC_RECEIPT WHERE RECEIPT_NO = @RECEIPT_NO)
	BEGIN

		DECLARE @TEMP NUMERIC
		SET @TEMP = @RECEIPT_NO
		EXEC CLINIC.DELETE_ROW_OC_RECEIPT_DETAILS @RECEIPT_NO = @TEMP
		DELETE FROM CLINIC.OC_RECEIPT WHERE RECEIPT_NO = @RECEIPT_NO

	END
	ELSE
	BEGIN

		PRINT 'The record against the provided id doesnt exist in table OC_RECEIPT.'

	END

END*/


/*DROP PROCEDURES*/
DROP PROCEDURE CLINIC.INSERT_ROW_OC_PERSON
DROP PROCEDURE CLINIC.INSERT_ROW_OC_PATIENT
DROP PROCEDURE CLINIC.INSERT_ROW_OC_PERSON_CONTACT
DROP PROCEDURE CLINIC.INSERT_ROW_OC_VISITS
DROP PROCEDURE CLINIC.INSERT_ROW_OC_DOCTOR
DROP PROCEDURE CLINIC.INSERT_ROW_OC_MEDICINE
DROP PROCEDURE CLINIC.INSERT_ROW_OC_PERSCRIPTION
DROP PROCEDURE CLINIC.INSERT_ROW_OC_RECEIPT_DETAILS
DROP PROCEDURE CLINIC.INSERT_ROW_OC_RECEIPT
DROP PROCEDURE CLINIC.DELETE_ROW_OC_PERSON
DROP PROCEDURE CLINIC.DELETE_ROW_OC_PERSON_CONTACT
DROP PROCEDURE CLINIC.DELETE_ROW_OC_PATIENT
DROP PROCEDURE CLINIC.DELETE_ROW_OC_VISITS
DROP PROCEDURE CLINIC.DELETE_ROW_OC_DOCTOR
DROP PROCEDURE CLINIC.DELETE_ROW_OC_MEDICINE
DROP PROCEDURE CLINIC.DELETE_ROW_OC_PERSCRIPTION
DROP PROCEDURE CLINIC.DELETE_ROW_OC_RECEIPT
DROP PROCEDURE CLINIC.DELETE_ROW_OC_RECEIPT_DETAILS